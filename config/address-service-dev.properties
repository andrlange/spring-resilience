#server.port=${PORT:0}
server.port=${PORT:8082}
spring.lifecycle.timeout-per-shutdown-phase=5s

## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5554/addresses
spring.datasource.username=postgres
spring.datasource.password=password

# create and drop table, good for testing, production set to none or comment it
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# Eureka
eureka.client.service-url.defaultZone=http://eureka:password@localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.non-secure-port-enabled=true
eureka.instance.secure-port-enabled=false
eureka.instance.nonSecurePort=${server.port}
eureka.client.should-unregister-on-shutdown=false

#Actuators
management.endpoint.info.enabled=true
management.info.java.enabled = true
management.info.os.enabled = true
management.endpoints.web.exposure.include=*
management.endpoint.metrics.enabled=true
management.endpoint.health.group.custom.show-components=always
management.endpoint.health.group.custom.show-details=always

management.health.ratelimiters.enabled=true
management.endpoint.health.show-details=always

# IO Micrometer Tracing (Migrating from Sleuth to Micrometer)

# traceID and spanId are predefined MDC keys - we want the logs to include them
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
# All traces should be sent to latency analysis tool
management.tracing.sampling.probability=1.0
# For Exemplars to work we need histogram buckets
management.metrics.distribution.percentiles-histogram.http.server.requests=true

management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans

# -------------------------------------------------
# Adding configuration for Resilience4J:Rate Limiter
# Rate Limiting
resilience4j.ratelimiter.instances.addressLimit.limitForPeriod=5
resilience4j.ratelimiter.instances.addressLimit.limitRefreshPeriod=15s
resilience4j.ratelimiter.instances.addressLimit.timeoutDuration=5s

resilience4j.ratelimiter.instances.addressLimit.registerHealthIndicator=true
resilience4j.ratelimiter.instances.addressLimit.eventConsumerBufferSize=100
